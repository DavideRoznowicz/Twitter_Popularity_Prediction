selection <- c("data","nuovi_positivi", "isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri")
d2 <- d[selection]
for (i in c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti")){
plot(d2[i], d2$nuovi_positivi,
col=time_interval(d2$data),
main=i)
}
plot(d2$tamp_rate_ieri, d2$tamp_rate - d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
#plot(d2$nuovi_positivi, d2$positivi_ieri, col=d2$color)
#lines(d2$tamp_rate_ieri, 0)
plot(d2$data, d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri+tamp_rate_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
#points(model_positivi$fitted.values,col="blue")
points(d2$nuovi_positivi,col="red")
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri+tamp_rate_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
points(d2$nuovi_positivi,col="red")
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+tamp_rate_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
points(d2$nuovi_positivi,col="red")
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
points(d2$nuovi_positivi,col="red")
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri+tamp_rate_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
points(d2$nuovi_positivi,col="red")
library(rtweet)
appname="food_pop"
key="ST2YCylWRuc0U2nWyJaIicvA6"
secret="LQmGWZZqfYrXutrQpOb9N9z665Otqw2fUYJNWhwQyYXCsNwc63"
access_token="445022752-ge4vhU99FeP9pGbnwFbZuY9lHOZHPKyesQuGal3Y"
access_secret="2jDMxRwKxmZSSHkETms8FHzUMsFryRTAuRHFiAL9DWW0E"
twitter_token <- create_token(
app = appname,
consumer_key = key,
consumer_secret = secret,
access_token = access_token,
access_secret = access_secret)
rstats_tweets <- search_tweets(q = "#food -filter:images", n = 500, lang = "en",include_rts = FALSE,type = "popular")
ordinato=rstats_tweets[order(-rstats_tweets$retweet_count),]
limit=rate_limit(twitter_token)
mylim=limit[limit$limit!=limit$remaining,]
ordinato_image=rstats_tweets_image[order(-rstats_tweets_image$retweet_count),]
rstats_tweets <- search_tweets(q = "#food -filter:images", n = 500, lang = "en",include_rts = FALSE,type = "popular")
ordinato=rstats_tweets[order(-rstats_tweets$retweet_count),]
limit=rate_limit(twitter_token)
mylim=limit[limit$limit!=limit$remaining,]
ordinato_image=rstats_tweets_image[order(-rstats_tweets_image$retweet_count),]
gordon=get_timeline("GordonRamsay",n=1500,include_rts=FALSE,token=twitter_token,q="-filter:images")
test=lookup_users("GordonRamsay",token = twitter_token)
rstats_tweets <- search_tweets(q = "#food -filter:images", n = 500, lang = "en",include_rts = FALSE,type = "popular")
View(rstats_tweets)
View(gordon)
gordon$media_url
is.na(gordon$media_url)
sum(is.na(gordon$media_url))
knitr::opts_chunk$set(echo = TRUE)
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri+tamp_rate_ieri,  family = Gamma(link="log"))
knitr::opts_chunk$set(echo = TRUE)
#needed for function shift
library(magic)
shifted <-function(col, shift=10){
res = shift(col, i=shift)
if (shift > 0){
res[seq.int(from=1, length.out=abs(shift))] = NA
}
if (shift < 0){
res[seq.int(to=length(res), length.out=abs(shift))] = NA # setting the tail of the array to NA
}
res
}
ds <- read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
ds.camp <- ds[ds$denominazione_regione == "Campania", ]
ds.camp$data <- as.POSIXct(ds.camp$data, tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
ds.camp$deceduti <-  c(0, diff(ds.camp$deceduti))
ds.camp$dimessi_guariti <- c(0, diff(ds.camp$dimessi_guariti))
ds.camp$tamponi <- c(0, diff(ds.camp$tamponi))
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
ds.camp$positivi_ieri <- shifted(ds.camp$nuovi_positivi, 1)
ds.camp$tamponi_ieri <- shifted(ds.camp$tamponi, 1)
ds.camp$tamp_rate_ieri <- shifted(ds.camp$tamp_rate, 1)
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
col_to_mean <-  c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri","nuovi_positivi")
for (i in col_to_mean){
ds.camp[i] <- rollmean(ds.camp[i], k=7, fill=NA, align="center")
}
#needed for function shift
library(magic)
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
#needed for function shift
library(magic)
library(zoo)
shifted <-function(col, shift=10){
res = shift(col, i=shift)
if (shift > 0){
res[seq.int(from=1, length.out=abs(shift))] = NA
}
if (shift < 0){
res[seq.int(to=length(res), length.out=abs(shift))] = NA # setting the tail of the array to NA
}
res
}
ds <- read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
ds.camp <- ds[ds$denominazione_regione == "Campania", ]
ds.camp$data <- as.POSIXct(ds.camp$data, tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
ds.camp$deceduti <-  c(0, diff(ds.camp$deceduti))
ds.camp$dimessi_guariti <- c(0, diff(ds.camp$dimessi_guariti))
ds.camp$tamponi <- c(0, diff(ds.camp$tamponi))
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
ds.camp$positivi_ieri <- shifted(ds.camp$nuovi_positivi, 1)
ds.camp$tamponi_ieri <- shifted(ds.camp$tamponi, 1)
ds.camp$tamp_rate_ieri <- shifted(ds.camp$tamp_rate, 1)
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
col_to_mean <-  c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri","nuovi_positivi")
for (i in col_to_mean){
ds.camp[i] <- rollmean(ds.camp[i], k=7, fill=NA, align="center")
}
ds.camp.range <- ds.camp[ds.camp$data > as.POSIXct("2020-08-31 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
num <- length(ds.camp.range$deceduti)
ds.camp.range$deceduti_giornalieri <- 0
ds.camp.range$color <- "Yellow"
ran <- 2:num
for(i in ran){
ds.camp.range$deceduti_giornalieri[i] <- ds.camp.range$deceduti[i] - ds.camp.range$deceduti[i - 1]
}
#new range to delete the superfluous day needed for the difference
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-11-14 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-15 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-23 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Orange"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-24 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-27 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-28 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-29 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-30 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-03 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data ==
as.POSIXct("2021-01-04 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
plot(ds.camp.range$data,   ds.camp.range$nuovi_positivi,
xlab = "data",
ylab = "nuovi positivi",
type = "l", col = "blue", ylim = c(-2500,4500))
lines(ds.camp.range$data,  ds.camp.range$variazione_totale_positivi,
col = "red")
lines(ds.camp.range$data,  ds.camp.range$deceduti_giornalieri,
col = "black")
# require(magic)
library(zoo)
d = ds.camp.range
time_interval <- function(date,
date0= as.POSIXct("2020-09-01 00:00:00", format = "%Y-%m-%d %H:%M:%OS"),
interval=15){
as.numeric(as.difftime(date - date0, units="days")) %/% interval
}
a = shifted(d$data, shift=-10)
sma = rollmean(d$nuovi_positivi, k=7, fill=NA, align="center")
plot(d$nuovi_positivi)
points(sma, col="red")
for(i in 7:19) {
plot(ds.camp.range[,i],
ds.camp.range$nuovi_positivi,
col=time_interval(ds.camp.range$data),
main=names(ds.camp.range)[i])
}
selection <- c("data","nuovi_positivi", "isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri")
d2 <- d[selection]
for (i in c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti")){
plot(d2[i], d2$nuovi_positivi,
col=time_interval(d2$data),
main=i)
}
plot(d2$tamp_rate_ieri, d2$tamp_rate - d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
#plot(d2$nuovi_positivi, d2$positivi_ieri, col=d2$color)
#lines(d2$tamp_rate_ieri, 0)
plot(d2$data, d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
knitr::opts_chunk$set(echo = TRUE)
#needed for function shift
library(magic)
library(zoo)
shifted <-function(col, shift=10){
res = shift(col, i=shift)
if (shift > 0){
res[seq.int(from=1, length.out=abs(shift))] = NA
}
if (shift < 0){
res[seq.int(to=length(res), length.out=abs(shift))] = NA # setting the tail of the array to NA
}
res
}
ds <- read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
ds.camp <- ds[ds$denominazione_regione == "Campania", ]
ds.camp$data <- as.POSIXct(ds.camp$data, tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
ds.camp$deceduti <-  c(0, diff(ds.camp$deceduti))
ds.camp$dimessi_guariti <- c(0, diff(ds.camp$dimessi_guariti))
ds.camp$tamponi <- c(0, diff(ds.camp$tamponi))
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
ds.camp$positivi_ieri <- shifted(ds.camp$nuovi_positivi, 1)
ds.camp$tamponi_ieri <- shifted(ds.camp$tamponi, 1)
ds.camp$tamp_rate_ieri <- shifted(ds.camp$tamp_rate, 1)
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
col_to_mean <-  c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri","nuovi_positivi")
for (i in col_to_mean){
ds.camp[i] <- rollmean(ds.camp[i], k=7, fill=NA, align="center")
}
ds.camp.range <- ds.camp[ds.camp$data > as.POSIXct("2020-08-31 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
num <- length(ds.camp.range$deceduti)
ds.camp.range$deceduti_giornalieri <- 0
ds.camp.range$color <- "Yellow"
ran <- 2:num
for(i in ran){
ds.camp.range$deceduti_giornalieri[i] <- ds.camp.range$deceduti[i] - ds.camp.range$deceduti[i - 1]
}
#new range to delete the superfluous day needed for the difference
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-11-14 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-15 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-23 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Orange"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-24 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-27 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-28 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-29 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-30 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-03 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data ==
as.POSIXct("2021-01-04 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
plot(ds.camp.range$data,   ds.camp.range$nuovi_positivi,
xlab = "data",
ylab = "nuovi positivi",
type = "l", col = "blue", ylim = c(-2500,4500))
lines(ds.camp.range$data,  ds.camp.range$variazione_totale_positivi,
col = "red")
lines(ds.camp.range$data,  ds.camp.range$deceduti_giornalieri,
col = "black")
# require(magic)
library(zoo)
d = ds.camp.range
time_interval <- function(date,
date0= as.POSIXct("2020-09-01 00:00:00", format = "%Y-%m-%d %H:%M:%OS"),
interval=15){
as.numeric(as.difftime(date - date0, units="days")) %/% interval
}
a = shifted(d$data, shift=-10)
sma = rollmean(d$nuovi_positivi, k=7, fill=NA, align="center")
plot(d$nuovi_positivi)
points(sma, col="red")
for(i in 7:19) {
plot(ds.camp.range[,i],
ds.camp.range$nuovi_positivi,
col=time_interval(ds.camp.range$data),
main=names(ds.camp.range)[i])
}
selection <- c("data","nuovi_positivi", "isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri")
d2 <- d[selection]
for (i in c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti")){
plot(d2[i], d2$nuovi_positivi,
col=time_interval(d2$data),
main=i)
}
plot(d2$tamp_rate_ieri, d2$tamp_rate - d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
#plot(d2$nuovi_positivi, d2$positivi_ieri, col=d2$color)
#lines(d2$tamp_rate_ieri, 0)
knitr::opts_chunk$set(echo = TRUE)
#needed for function shift
library(magic)
library(zoo)
shifted <-function(col, shift=10){
res = shift(col, i=shift)
if (shift > 0){
res[seq.int(from=1, length.out=abs(shift))] = NA
}
if (shift < 0){
res[seq.int(to=length(res), length.out=abs(shift))] = NA # setting the tail of the array to NA
}
res
}
ds <- read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
ds.camp <- ds[ds$denominazione_regione == "Campania", ]
ds.camp$data <- as.POSIXct(ds.camp$data, tryFormats = c("%Y-%m-%d %H:%M:%OS",
"%Y/%m/%d %H:%M:%OS",
"%Y-%m-%d %H:%M",
"%Y/%m/%d %H:%M",
"%Y-%m-%d",
"%Y/%m/%d"))
ds.camp$deceduti <-  c(0, diff(ds.camp$deceduti))
ds.camp$dimessi_guariti <- c(0, diff(ds.camp$dimessi_guariti))
ds.camp$tamponi <- c(0, diff(ds.camp$tamponi))
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
ds.camp$positivi_ieri <- shifted(ds.camp$nuovi_positivi, 1)
ds.camp$tamponi_ieri <- shifted(ds.camp$tamponi, 1)
ds.camp$tamp_rate_ieri <- shifted(ds.camp$tamp_rate, 1)
ds.camp$tamp_rate <-  ds.camp$nuovi_positivi/ds.camp$tamponi
col_to_mean <-  c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri","nuovi_positivi")
for (i in col_to_mean){
ds.camp[i] <- rollmean(ds.camp[i], k=7, fill=NA, align="center")
}
ds.camp.range <- ds.camp[ds.camp$data > as.POSIXct("2020-08-31 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
num <- length(ds.camp.range$deceduti)
ds.camp.range$deceduti_giornalieri <- 0
ds.camp.range$color <- "Yellow"
ran <- 2:num
for(i in ran){
ds.camp.range$deceduti_giornalieri[i] <- ds.camp.range$deceduti[i] - ds.camp.range$deceduti[i - 1]
}
#new range to delete the superfluous day needed for the difference
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range <- ds.camp.range[ds.camp.range$data >
as.POSIXct("2020-09-01 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-11-14 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-11-15 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-23 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Orange"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-24 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-27 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-28 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2020-12-29 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2020-12-30 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-03 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data ==
as.POSIXct("2021-01-04 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-05 00:00:00",
format = "%Y-%m-%d %H:%M:%OS") & ds.camp.range$data <=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Red"
ds.camp.range[ds.camp.range$data >=
as.POSIXct("2021-01-06 00:00:00",
format = "%Y-%m-%d %H:%M:%OS"),]$color <- "Yellow"
plot(ds.camp.range$data,   ds.camp.range$nuovi_positivi,
xlab = "data",
ylab = "nuovi positivi",
type = "l", col = "blue", ylim = c(-2500,4500))
lines(ds.camp.range$data,  ds.camp.range$variazione_totale_positivi,
col = "red")
lines(ds.camp.range$data,  ds.camp.range$deceduti_giornalieri,
col = "black")
# require(magic)
library(zoo)
d = ds.camp.range
time_interval <- function(date,
date0= as.POSIXct("2020-09-01 00:00:00", format = "%Y-%m-%d %H:%M:%OS"),
interval=15){
as.numeric(as.difftime(date - date0, units="days")) %/% interval
}
a = shifted(d$data, shift=-10)
sma = rollmean(d$nuovi_positivi, k=7, fill=NA, align="center")
plot(d$nuovi_positivi)
points(sma, col="red")
for(i in 7:19) {
plot(ds.camp.range[,i],
ds.camp.range$nuovi_positivi,
col=time_interval(ds.camp.range$data),
main=names(ds.camp.range)[i])
}
selection <- c("data","nuovi_positivi", "isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti", "tamp_rate", "tamp_rate_ieri")
d2 <- d[selection]
for (i in c("isolamento_domiciliare", "totale_ospedalizzati", "positivi_ieri", "dimessi_guariti", "deceduti")){
plot(d2[i], d2$nuovi_positivi,
col=time_interval(d2$data),
main=i)
}
plot(d2$tamp_rate_ieri, d2$tamp_rate - d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
#plot(d2$nuovi_positivi, d2$positivi_ieri, col=d2$color)
#lines(d2$tamp_rate_ieri, 0)
plot(d2$data, d2$tamp_rate_ieri, col=time_interval(d2$data, interval=10))
abline(h=0)
model_positivi=glm(data=d2,formula=nuovi_positivi~isolamento_domiciliare+totale_ospedalizzati+positivi_ieri+tamp_rate_ieri,  family = Gamma(link="log"))
summary(model_positivi)
#par(mfrow=c(2,2))
plot(model_positivi)
plot(model_positivi$fitted.values)
points(d2$nuovi_positivi,col="red")
View(ds.camp.range)
spettro=read.csv("out.csv")
setwd("~/Scrivania/MLproject/image_processing")
spettro=read.csv("out.csv")
View(spettro)
6742
